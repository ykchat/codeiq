# coding: UTF-8

# 開発言語: python 2.7
# 曲線の長さ: 6252.38460316

import numpy as np

from math import sqrt
from scipy.integrate import quad

def calculate(data):

    n = data.shape[1]

    # Catmull-Rom補間用座標
    p0 = data[:,0:-1]
    p1 = np.append(data[:,1:-1], data[:,0:1], axis=1)
    p2 = np.append(data[:,2:-1], data[:,0:2], axis=1)
    p3 = np.append(data[:,3:-1], data[:,0:3], axis=1)

    # Catmull-Romスプライン曲線
    c1 = (-   p0 + 3*p1 - 3*p2 + p3) / 2.0
    c2 = (  2*p0 - 5*p1 + 4*p2 - p3) / 2.0
    c3 = (-   p0        +   p2     ) / 2.0

    # 曲線の長さの微分方程式
    a1 = (9*c1*c1                    ).sum(axis=0)
    a2 = (6*c1*c2 + 6*c2*c1          ).sum(axis=0)
    a3 = (3*c1*c3 + 4*c2*c2 + 3*c3*c1).sum(axis=0)
    a4 = (          2*c2*c3 + 2*c3*c2).sum(axis=0)
    a5 = (                      c3*c3).sum(axis=0)
    dfunc = lambda t,i: sqrt(a1[i]*(t**4)+a2[i]*(t**3)+a3[i]*(t**2)+a4[i]*t+a5[i])

    # 曲線の長さ（積分）
    dist = [quad(dfunc, 0, 1, args=(i,))[0] for i in range(n-1)]

    print sum(dist)

if __name__ == '__main__':

    x = [1114,1073,1029.087838,946.827044,868,782,765.3711657,749.4903846,765.3100559,757.0159236,739,712,668,643.6390728,640.8549383,658,701,443,337,212,111.9150943,69,38,22.86290321,24.06707312,39.88805969,70.91884815,116.8935484,177,287,405,901,999.3017242,1080,1153.09507,1212.121302,1255.140625,1278.15896,1281.955696,1264.993507,1231.24269,1186.201807,1131.450893,1046,1036.274691,1107,1187,1263,1349.879032,1397,1430.753521,1459.02795,1476.065445,1460.11747,1429.993333,1361,1290,1150,996.796875,1034,1147.842466,1176,1167,1129,1058,976.4308176,1031,1153,1173.161585,1180.477444,1171.118902,1149,1114]
    y = [1418.040323,1415.10443,1397,1319,1186.934783,975.592437,983,1022,1108,1144,1157.356771,1160.217489,1135.955128,1088,1034,982.2196969,919.6954546,935.0227273,922.0796703,865.158046,769,698.4135803,615.5657896,528,435,359,286,220,163.9908536,105.7131579,82.88926172,112.7982954,133,166.8189189,217,281,358,440,527,620,698,761,812,863.365625,878,902.5306748,902.5842391,879.2135416,827,818.7708333,828,850,911,953,985,1023.074586,1047.050532,1058.085987,1025,1062.496269,1107,1134.293478,1169.069536,1181.094512,1164.247093,1121,1187.716783,1287.812883,1315,1348,1383,1406.123563,1418.040323]

    data = np.array([x, y])

    calculate(data)
